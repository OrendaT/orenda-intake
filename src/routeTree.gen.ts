/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProviderOnboardingRouteRouteImport } from './routes/provider-onboarding/route'
import { Route as IntakeRouteRouteImport } from './routes/intake/route'
import { Route as CreditCardRouteRouteImport } from './routes/credit-card/route'
import { Route as IndexRouteImport } from './routes/index'

const ProviderOnboardingRouteRoute = ProviderOnboardingRouteRouteImport.update({
  id: '/provider-onboarding',
  path: '/provider-onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const IntakeRouteRoute = IntakeRouteRouteImport.update({
  id: '/intake',
  path: '/intake',
  getParentRoute: () => rootRouteImport,
} as any)
const CreditCardRouteRoute = CreditCardRouteRouteImport.update({
  id: '/credit-card',
  path: '/credit-card',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/credit-card': typeof CreditCardRouteRoute
  '/intake': typeof IntakeRouteRoute
  '/provider-onboarding': typeof ProviderOnboardingRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/credit-card': typeof CreditCardRouteRoute
  '/intake': typeof IntakeRouteRoute
  '/provider-onboarding': typeof ProviderOnboardingRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/credit-card': typeof CreditCardRouteRoute
  '/intake': typeof IntakeRouteRoute
  '/provider-onboarding': typeof ProviderOnboardingRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/credit-card' | '/intake' | '/provider-onboarding'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/credit-card' | '/intake' | '/provider-onboarding'
  id: '__root__' | '/' | '/credit-card' | '/intake' | '/provider-onboarding'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreditCardRouteRoute: typeof CreditCardRouteRoute
  IntakeRouteRoute: typeof IntakeRouteRoute
  ProviderOnboardingRouteRoute: typeof ProviderOnboardingRouteRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/provider-onboarding': {
      id: '/provider-onboarding'
      path: '/provider-onboarding'
      fullPath: '/provider-onboarding'
      preLoaderRoute: typeof ProviderOnboardingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/intake': {
      id: '/intake'
      path: '/intake'
      fullPath: '/intake'
      preLoaderRoute: typeof IntakeRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/credit-card': {
      id: '/credit-card'
      path: '/credit-card'
      fullPath: '/credit-card'
      preLoaderRoute: typeof CreditCardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreditCardRouteRoute: CreditCardRouteRoute,
  IntakeRouteRoute: IntakeRouteRoute,
  ProviderOnboardingRouteRoute: ProviderOnboardingRouteRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
